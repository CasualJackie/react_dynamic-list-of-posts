{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","POSTS_URL","COMMENTS_URL","getUserPosts","a","fetch","response","json","posts","data","getPostDetails","postId","postDetails","PostsList","userSelectId","selectedPostId","setSelectedPostId","statusPost","setStatusPost","useState","visiblePosts","setVisiblePosts","handlePostId","event","Number","target","value","useEffect","fetchData","filter","userId","className","map","post","key","id","title","type","onClick","NewCommentForm","name","placeholder","getPostComments","comments","comment","deleteComment","commentId","method","PostDetails","setDatails","postComments","setPostComments","hideStatus","setHideStatus","loadData","Promise","all","details","handleDelete","body","length","App","setUserSelectId","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfc943b6.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com/';\n\nexport const POSTS_URL = `${BASE_URL}posts/`;\n\nexport const COMMENTS_URL = `${BASE_URL}comments/`;\n","import { POSTS_URL } from './api';\n\nexport const getUserPosts = async() => {\n  const response = await fetch(POSTS_URL);\n  const posts = await response.json();\n\n  return posts.data;\n};\n\nexport const getPostDetails = async(postId) => {\n  const response = await fetch(POSTS_URL + postId);\n  const postDetails = await response.json();\n\n  return postDetails.data;\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\nimport { getUserPosts } from '../../api/posts';\n\nexport const PostsList = ({\n  userSelectId,\n  selectedPostId,\n  setSelectedPostId,\n  statusPost,\n  setStatusPost,\n}) => {\n  const [visiblePosts, setVisiblePosts] = useState([]);\n\n  const handlePostId = (event) => {\n    setSelectedPostId(Number(event.target.value));\n    setStatusPost(!statusPost);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await getUserPosts();\n\n      setVisiblePosts(response);\n    }\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await getUserPosts();\n\n      if (userSelectId === 0) {\n        setVisiblePosts(response);\n\n        return;\n      }\n\n      const posts = response.filter(({ userId }) => (\n        userId === userSelectId\n      ));\n\n      setVisiblePosts(posts);\n    }\n\n    fetchData();\n  }, [userSelectId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {visiblePosts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n                {' '}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={handlePostId}\n              value={post.id}\n            >\n              {selectedPostId === post.id && statusPost ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  changePostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n  userSelectId: PropTypes.number.isRequired,\n}.isRequired;\n","import React from 'react';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = () => (\n  <form className=\"NewCommentForm\">\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Your name\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"email\"\n        placeholder=\"Your email\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <textarea\n        name=\"body\"\n        placeholder=\"Type comment here\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <button\n      type=\"submit\"\n      className=\"NewCommentForm__submit-button button\"\n    >\n      Add a comment\n    </button>\n  </form>\n);\n","import { COMMENTS_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const response = await fetch(COMMENTS_URL);\n  const comments = await response.json();\n\n  return comments.data.filter(comment => comment.postId === postId);\n};\n\nexport const deleteComment = async(commentId) => {\n  const response = await fetch(`${COMMENTS_URL}${commentId}`, {\n    method: 'DELETE',\n  });\n\n  return response;\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment } from '../../api/comments';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [postDetails, setDatails] = useState({});\n  const [postComments, setPostComments] = useState([]);\n  const [hideStatus, setHideStatus] = useState(true);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async() => {\n    const [details, comments] = await Promise.all(\n      [getPostDetails(selectedPostId), getPostComments(selectedPostId)],\n    );\n\n    setDatails(details);\n    setPostComments(comments);\n  };\n\n  const handleHide = () => {\n    setHideStatus(!hideStatus);\n  };\n\n  const handleDelete = async(commentId) => {\n    await deleteComment(commentId);\n\n    loadData();\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{postDetails.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleHide}\n        >\n          Hide\n          {' '}\n          {postComments.length}\n          {' '}\n          comments\n        </button>\n\n        {hideStatus && (\n          <ul className=\"PostDetails__list\">\n            {postComments.map(comment => (\n              <li key={comment.id} className=\"PostDetails__list-item\">\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => handleDelete(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n}.isRequired;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [userSelectId, setUserSelectId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [statusPost, setStatusPost] = useState(false);\n\n  const handleSelect = (event) => {\n    setUserSelectId(Number(event.target.value));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            onChange={handleSelect}\n            value={userSelectId}\n            className=\"App__user-selector\"\n          >\n            <option value={0}>All users</option>\n            <option value={1}>Leanne Graham</option>\n            <option value={2}>Ervin Howell</option>\n            <option value={3}>Clementine Bauch</option>\n            <option value={4}>Patricia Lebsack</option>\n            <option value={5}>Chelsey Dietrich</option>\n            <option value={6}>Mrs. Dennis Schulist</option>\n            <option value={7}>Kurtis Weissnat</option>\n            <option value={8}>Nicholas Runolfsdottir V</option>\n            <option value={9}>Glenna Reichert</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userSelectId={userSelectId}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n            statusPost={statusPost}\n            setStatusPost={setStatusPost}\n          />\n        </div>\n\n        {statusPost && (\n          <div className=\"App__content\">\n            <PostDetails selectedPostId={selectedPostId} />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}